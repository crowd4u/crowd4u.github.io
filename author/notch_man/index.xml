<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>notch_man on crowd4u tech blog</title><link>http://crowd4u.github.io/author/notch_man/</link><description>Recent content in notch_man on crowd4u tech blog</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Tue, 20 Dec 2022 22:00:00 +0900</lastBuildDate><atom:link href="http://crowd4u.github.io/author/notch_man/index.xml" rel="self" type="application/rss+xml"/><item><title>簡単に始める自動デプロイ生活</title><link>http://crowd4u.github.io/posts/2022-12-20-rsync_deploy/</link><pubDate>Tue, 20 Dec 2022 22:00:00 +0900</pubDate><guid>http://crowd4u.github.io/posts/2022-12-20-rsync_deploy/</guid><description>&lt;p>こんにちは、notch_manです。とある講義のメンターをやっていて色々思うところがあったので、今日は簡単に自動デプロイを実現する方法を紹介したいと思います。&lt;/p>
&lt;h2 id="デプロイって難しそう">デプロイって難しそう&lt;/h2>
&lt;p>デプロイって皆さんに聞くと大体こんなワードが返ってきます（私の観測範囲）。&lt;/p>
&lt;blockquote>
&lt;p>GitHub Actionsでいろいろ書くんでしょ？難しそう&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>CircleCIで自動デプロイはやったことありますが、個人だとお金がかかるし…&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>友人にプロが居るのでいつも丸投げです&lt;/p>
&lt;/blockquote>
&lt;p>確かに、複雑なデプロイや環境毎に変数値が変わるなどの事情があればこれらのサービスを使った方がいろいろな事が出来ます。ただ、デプロイってそんな難しいものなのでしょうか？ここでデプロイという単語を辞書で見てみましょう。&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>デプロイ&lt;/strong>とは、配備する、配置する、展開する、配置につく、などの意味を持つ英単語。ITの分野では開発したソフトウェアを実際の運用環境に配置・展開して実用に供することを指す場合が多い。（出典：&lt;a class="link" href="https://e-words.jp/w/%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4.html" target="_blank" rel="noopener"
>https://e-words.jp/w/デプロイ.html&lt;/a>）&lt;/p>
&lt;/blockquote>
&lt;p>これらをまとめると、みなさんが難しいと思う自動デプロイはたった3つの条件を満たせばどんな方法で実現しても良いことが分かります。&lt;/p>
&lt;ol>
&lt;li>何かを実行したらソースコード・成果物が所定の位置に配置される&lt;/li>
&lt;li>所定の位置に配置されたソースコード・成果物が実用的な動作をする&lt;/li>
&lt;li>それらがなるべく人の手を介さずに処理される&lt;/li>
&lt;/ol>
&lt;p>というわけで、これらを満たすとても簡単なデプロイスクリプトを実装してみます。&lt;/p>
&lt;h2 id="rsyncで始める自動デプロイ">rsyncで始める自動デプロイ&lt;/h2>
&lt;p>初心者がデプロイ組むときにサーバーのURLとかいろいろ考えるの難しいですよね？でも、そんな状態でも大体”&lt;strong>公開鍵認証&lt;/strong>”でSSHは通じているはずです。となれば、この経路を使ってファイルを置くことが出来そうですね。というわけで、SSH経由で自動デプロイをしてみましょう。これを実現する方法にrsyncというものがあります。rsyncは差分ファイル転送を行なうツールになっています。差分ファイル転送を雑に説明すると、あるファイルに更新があった場合に別のサーバーなどの対応するファイルと変更を同期する機能のことです。rsyncについては&lt;a class="link" href="https://wiki.archlinux.jp/index.php/Rsync" target="_blank" rel="noopener"
>こちらのサイト&lt;/a> がとても参考になります。&lt;/p>
&lt;p>では、rsyncを使ってデプロイスクリプト（deploy.sh）を書いてみましょう。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>rsync -r -a &amp;lt;転送したいファイルを含んだフォルダ&amp;gt;/* &amp;lt;remote server&amp;gt;:&amp;lt;配置したいディレクトリ&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>さらに~/ssh/configを編集して鍵情報などを登録しておきます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>Host &amp;lt;remote server&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HostName &amp;lt;ip address or server name&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> User example
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> IdentityFile ~/.ssh/example_key
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ServerAliveInterval &lt;span style="color:#ae81ff">60&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>以上でデプロイスクリプトの完成です。あとは&lt;code>bash [deploy.sh](http://deploy.sh)&lt;/code> を実行すればデプロイが走ります。&lt;/p>
&lt;h2 id="まとめ">まとめ&lt;/h2>
&lt;p>自動デプロイとか一見すると難しいワードですが、以下を満たせば手段は何でも良いです。&lt;/p>
&lt;ol>
&lt;li>何かを実行したらソースコード・成果物が所定の位置に配置される&lt;/li>
&lt;li>所定の位置に配置されたソースコード・成果物が実用的な動作をする&lt;/li>
&lt;li>それらがなるべく人の手を介さずに処理される&lt;/li>
&lt;/ol>
&lt;p>特に講義で頻繁にデプロイをする方々はぜひ参考にしてみてください。最後になりますが、技術で解決出来る事はさっさと技術で解決して本質にしっかり向き合っていきましょう！&lt;/p></description></item><item><title>融合知能デザイン研究室でエンジニアブログを始めました</title><link>http://crowd4u.github.io/posts/2022-11-30-intro/</link><pubDate>Mon, 28 Nov 2022 00:25:32 +0900</pubDate><guid>http://crowd4u.github.io/posts/2022-11-30-intro/</guid><description>&lt;p>初めまして。融合知能デザイン研究に所属する現在B4のnotch_manです。
融合知能デザイン研究室（fusioncomp lab）は2017年に立ち上げたAI+人間+ビッグデータによる融合知能の研究を進める研究室です。&lt;/p>
&lt;p>&lt;a class="link" href="https://fusioncomplab.org/" target="_blank" rel="noopener"
>融合知能デザイン研究室のHPはこちら&lt;/a>&lt;/p>
&lt;p>今回は融知研のエンジニアブログの記念すべき初投稿として、エンジニアリング視点で融知研の目指す方向、エンジニアブログを開設した理由などについて書いていこうと思います。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;h2 id="エンジニアブログを開設した理由">エンジニアブログを開設した理由&lt;/h2>
&lt;p>私たちがエンジニアブログを開設した理由は、自分達の持つ知見を外部に発信することでエンジニア界隈全体に少しでも貢献したいと考えたからです。&lt;/p>
&lt;p>エンジニアブログは様々なIT企業が技術的知見を外部に発信する場として積極的に運用されています（所感）。例えば、PRTIMES様もエンジニアブログを公開しており、業務内外で得た知見を外部に共有する文化が広まりつつあります。&lt;/p>
&lt;p>&lt;a class="link" href="https://developers.prtimes.jp/2022/11/04/benefits-of-blog-posts-for-engineers/" target="_blank" rel="noopener"
>PRTIMES 開発者ブログへ&lt;/a>&lt;/p>
&lt;p>また、私たちにもいろいろなメリットがあります。&lt;/p>
&lt;h3 id="ブログを書くメリット">ブログを書くメリット&lt;/h3>
&lt;p>ブログを書くメリットは以下の様なものがあると考えています。&lt;/p>
&lt;ul>
&lt;li>自分がやってきたことの記録になる&lt;/li>
&lt;li>記事を書くことで身に着けた知識が定着する&lt;/li>
&lt;li>ポートフォリオとして活用出来る&lt;/li>
&lt;li>研究室での開発という特異な環境の知見自体に価値がある&lt;/li>
&lt;/ul>
&lt;p>1つ1つ説明していきます。&lt;/p>
&lt;h4 id="自分がやってきたことの記録になる">自分がやってきたことの記録になる&lt;/h4>
&lt;p>研究では手探りでいろいろなことを進めていきます。すると、過去に自分がやったことを忘れて同じようなことを検索したり、車輪の再発明をしたりと無駄な時間が増えてしまいます。これまでの自分のログを文章としてまとめることでそれらを振り返ることが出来るようになります。&lt;/p>
&lt;h4 id="記事を書くことで身に着けた知識が定着する">記事を書くことで身に着けた知識が定着する&lt;/h4>
&lt;p>例えば、開発中に何かのバグに遭遇したときに大抵の場合は手探りで解決してしまうと思います。しかし、バグが何故生まれたのか？それを防ぐことは出来ないのか？あるいは技術的な限界があるのか？それらについて深い洞察を行なうことはあまり無いと思います。
これらをブログ記事を書くことをきっかけに確かな知識として定着することが出来るようになります。何故なら、第3者に自分が直面した課題、その解決策を伝える時に原因から解決策まで完結に、明確に伝える必要があるからです。何となく弄ったらバグが治りました！なんて記事は何の知識にもならないですし、他の人に伝わる内容にはなりません。他に人に伝えるには何となくで済ましたことを1つ1つを言語化し、それを理解する必要があります。それらの活動を通じて、本物の知識を身につけることが出来ますし、ついでに文章執筆スキルも向上させられます。&lt;/p>
&lt;h4 id="ポートフォリオとして活用出来る">ポートフォリオとして活用出来る&lt;/h4>
&lt;p>最近のIT関連の就活ではこれまでの実績を要求されがちです。ここで、顕著な実績（学会やコンテストでの受賞歴など）があれば問題無いですが、私たちのような研究室での開発は公に出来ない事も多いので不利になりがちです。しかし、何はどうであれ開発していることに変わりはなく、適切なプロセスを踏んでいればIT業界で働くための基礎体力は身に付いてます。エンジニアブログで執筆する内容はそのような基礎体力を証明する明確なアウトプットだと考えています。さらに、これらを地道に積み上げていき融知研のエンジニアブログが一定の知名度を獲得すれば、その記事を書いているという事実が実績にもなります。訳の分からないコンテスト・ハッカソンに参加したり奇抜なポートフォリオサイトを作るのも良いですが、ブログ記事を通じた地道なアウトプットも1つの戦略として有効です。&lt;/p>
&lt;h4 id="研究室での開発という特異な環境の知見自体に価値がある">研究室での開発という特異な環境の知見自体に価値がある&lt;/h4>
&lt;p>私たちは研究室でシステム開発を行なうという稀な環境に属しています。この特異性として以下が考えられます。&lt;/p>
&lt;ul>
&lt;li>人が2～3年スパンで総入れ替わりする&lt;/li>
&lt;li>研究がメインであるためシステム開発は副業的感覚&lt;/li>
&lt;li>専任のエンジニアが居らず、属人化が進む&lt;/li>
&lt;li>たまたまプログラミング得意な人が居れば何とかなるが、居ない場合はとても苦労する&lt;/li>
&lt;li>いずれの状況に関わらずサービスはユーザーに価値を提供し続ける&lt;/li>
&lt;/ul>
&lt;p>私が開発に関わり始めたのは2022年の5月頃ですが、前年度まで居られた優秀な方は全員卒業してしまいゼロからの再スタートになってしまいました。
幸い、前任者ほどでは無いですが私にもある程度の知見がありギリギリのところでサービスを提供し続けられています。
しかし、そちらを優先しているが故に研究室内のネットワークの管理に手が回らないなどの弊害も生じています。
これらは徐々に解消しつつあります（これについては別途記事を作成します）が、このような特殊な環境での開発知見はそれ自体一定の需要があるのではないかと考えています。
私たちはそのような知見を積極的に外部に公開することで、ソフトウェア開発全般に対して微力ながら貢献できれば良いなと考えています。&lt;/p>
&lt;h2 id="融合知能デザイン研究室のエンジニアリングの目指す方向">融合知能デザイン研究室のエンジニアリングの目指す方向&lt;/h2>
&lt;p>私たちが今後目指すのは次の3つです。&lt;/p>
&lt;ol>
&lt;li>Crowd4uのサービス維持&lt;/li>
&lt;li>NextCrowd4uのサービス提供を目指す&lt;/li>
&lt;li>挑戦できる環境を整える&lt;/li>
&lt;/ol>
&lt;h3 id="crowd4uのサービス維持">Crowd4uのサービス維持&lt;/h3>
&lt;p>Crowd4uは2008年頃から稼働している「世界をより良い場所にするためのマイクロタスクを実行するための非営利プラットフォーム」です。
こちらでは延べ200万回以上のマイクロタスクが実行され、多くのプロジェクトが行なわれてきました。
また、私たち融合知能デザイン研究室の研究の要に位置づけられるサービスであり今後もサービスの提供を持続していく必要があります。&lt;/p>
&lt;p>&lt;a class="link" href="https://crowd4u.org/ja/" target="_blank" rel="noopener"
>Crowd4uはこちらからアクセスできます&lt;/a>&lt;/p>
&lt;p>ただ、現在Crowd4uのサービス維持に当たって以下の様な課題が山積しています。&lt;/p>
&lt;ul>
&lt;li>各種バージョンが古くセキュリティ上の課題が深刻である&lt;/li>
&lt;li>モノリスなEC2を抱えている&lt;/li>
&lt;li>前任者からの引き継ぎが十分ではない&lt;/li>
&lt;/ul>
&lt;p>ただ、我々はこの1年でこれらに立ち向かうための基礎体力を身につけてきました。
新機能開発とは異なり、このような課題は適切に進めていけばいつかは必ず終わる作業です。
その事実は後述するNextCrowd4u開発で証明しました。
多くの課題があり、時間もかかりますが1つ1つ確実に前に進んでいきます。&lt;/p>
&lt;h3 id="nextcrowd4uのサービス提供を目指す">NextCrowd4uのサービス提供を目指す&lt;/h3>
&lt;p>NextCrowd4u（N4U）はCrowd4uの後継システムとして昨年から開発が本格化したプロジェクトになっています。
ただ、昨年から開発と言っても4月で担当が総入れ替わりし、ほぼ0の状態からスタートしたプロジェクトです。
N4Uは3月下旬から研究目的でテストリリースが始まっていました。
しかし、これまでとは全く違う言語・フレームワーク・アーキテクチャで開発していたが故にいくつものトラブルが発生しました。
これらを解消するには多くの作業が必要で、半年近く経った11月末にそれらの機能改修が終了しシステムの安定性を大きく向上させることに成功しました。&lt;/p>
&lt;p>私たちは知識も経験も無い中、手探りですが課題を洗い出しそれらをタスクチケットに起票して1つ1つ進めていきました。
並行していた新機能開発も含めてですが、このプロジェクトだけで実に100以上のタスクチケットが立てられました。
これらを進めるのは途方もない作業で、負担も大きかったと思います。
しかし、私たちは途方もない量でも1つ1つ進めていけば前に進むことを実感しました。
そして、やり続ければいつかはやり遂げられることを経験しました。&lt;/p>
&lt;p>今後は新機能開発やセキュリティ面の改修を進めていき、来年のリリースに向けて攻めの姿勢で開発を続けていきます。&lt;/p>
&lt;h3 id="挑戦出来る環境を創る">挑戦出来る環境を創る&lt;/h3>
&lt;p>私は&lt;strong>挑戦するマインド&lt;/strong>がとても大事だと思っています。
新しいサービスを作るにしても、レガシーなシステムを直すにしても多くの壁があります。
時にこの壁はとても厚く、越えるのを躊躇ってしまうレベルの物かもしれません。
しかし、誰かがこの壁を越えることに取り組まなければ私たちは前に進むことは出来ません。&lt;/p>
&lt;p>これまでも、私を中心に以下のような新しいことに取り組んで来ました（これらについては追々ブログとして公開する予定です）。&lt;/p>
&lt;ul>
&lt;li>レガシーシステムのバージョンアッププロジェクト&lt;/li>
&lt;li>レイヤーアーキテクチャの採用によるAPIのリファクタリング&lt;/li>
&lt;li>ローカルと本番環境のデータベースの同期&lt;/li>
&lt;/ul>
&lt;p>その他にも研究室の取り組みとして以下のようなことをやりました。&lt;/p>
&lt;ul>
&lt;li>サーバー構築を組み立てから実施&lt;/li>
&lt;li>オープンラボの運営を従来と大きく変え、多くの見学者を動員&lt;/li>
&lt;li>エンジニアブログの立ち上げ&lt;/li>
&lt;/ul>
&lt;p>今年、行なった様々なことは主に私を中心に取り組んだ内容になります。
1つ1つの壁は厚かったですが、皆が力を合わせ助け合うことでそれらを越えることが出来ました。
この成功は私たち全員の&lt;strong>挑戦するマインド&lt;/strong>が高まり、積極的な行動があったからこそ成功したものです。&lt;/p>
&lt;p>私は、このような&lt;strong>挑戦するマインド&lt;/strong>を持った人達を増やせれば研究も開発もさらに大きく進んでいくのではないかと考えています。
そして、私をはじめこの1年プロジェクトに関わった方々には多くの成功や失敗を経験し、たくさんのノウハウを貯めています。&lt;/p>
&lt;p>&lt;strong>今のラボにはそういった頼もしいメンバーがたくさん居るので、何かやりたい事があったら積極的に手を挙げてドンドン取り組んでいきましょう&lt;/strong>&lt;/p>
&lt;p>既に多くのメンバーが自分のやりたい事を積極的に行動する雰囲気が出来つつあり、今後も多くのことに取り組んでいく予定です。
もちろん、本業は研究なのでそれを疎かにしてはいけないです。
しかし、せっかくの機会なので学生時代にしか出来ない活動をたくさんやっていきましょう。&lt;/p>
&lt;p>私は、そのような雰囲気作りを今後も積極的に行なっていくつもりです。&lt;/p>
&lt;h2 id="最後に">最後に&lt;/h2>
&lt;p>このブログでは今後、研究や開発で詰まったことの知見共有、チーム開発のノウハウなどを積極的に発信していきます。
引き続きよろしくお願い申し上げます。&lt;/p></description></item></channel></rss>